MEMORY
{
//  Cx_IMU:  at 0x00008000, len = 0x00038000;	// NMC0 (128*7)kB
    
    C0_IMU0: at 0x00000200, len = 0x00007E00;   // NMC0 128kB 
    C0_IMU1: at 0x00008000, len = 0x00008000;   // NMC0 128kB
    C0_IMU2: at 0x00010000, len = 0x00008000;   // NMC0 128kB
    C0_IMU3: at 0x00018000, len = 0x00008000;   // NMC0 128kB
	
	//SHMEM0:  at 0x000A8000, len = 0x00008000;	// shared 128kB used by nmc0
	//SHMEM1:  at 0x000B0000, len = 0x00008000;	// shared 128kB used by nmc0
	SHMEM1:  at 0x000B8000, len = 0x00008000;	// shared 128kB
	SYNCRO:  at 0x20000000, len = 0x00000010;	// SYNCRO BUFFER
	//EMI:     at 0x20000010, len = 0x03FFFFF0;	// DDR2   256MB // DDR(NMC0)
	EMI:     at 0x24000000, len = 0x04000000;	// DDR2   256MB // DDR(NMC1)
	
}

SEGMENTS
{
	code           : in C0_IMU0;
	data           : in C0_IMU1;
	seg_imu0       : in C0_IMU1;
	seg_imu1       : in C0_IMU1;
	seg_imu2       : in C0_IMU2;
	seg_imu3       : in C0_IMU3;
	seg_shmem1 	:in SHMEM1;
	shared0        : in EMI;
	syncro	 	   : in SYNCRO;

}

SECTIONS
{
	.text          : in code;
	.init          : in code;
	.fini          : in code;

	.heap          : in shared0;
    .heap1         : in seg_imu1;
    .heap2         : in seg_imu2;
   	.heap3         : in seg_shmem1;
	
	.data          : in data;
	.bss           : in data;
	.stack         : in data;
	
	.data_imu0     : in seg_imu1;
	.data_imu1     : in seg_imu1;
	.data_imu2     : in seg_imu2;
	.data_imu3     : in seg_imu3;
	
	.data_imu0.bss : in seg_imu1;
	.data_imu1.bss : in seg_imu1;
	.data_imu2.bss : in seg_imu2;
	.data_imu3.bss : in seg_imu3;

	.data_hal_syncro: in syncro;
	//.rpc_services.bss: in shared0;
	//.rpc_services    : in shared0;

}
