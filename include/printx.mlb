
// Any arguments except gr5 are possible



macro PRINT_MATRIX_32X(text, matrix, height, width)
	extern _printMatrix_32x:label;
	own skiptext:label;
	goto skiptext;
	own _text		: word[16]=text;	
	<skiptext>
	push ar5,gr5;
	ar5 = sp;
    sp += 4;
	
	gr5 = width;
    [ ar5++ ] = gr5;	// width
	
	gr5 = height; 
	[ ar5++ ] = gr5;	// height
	
	gr5 = matrix;
	[ ar5++ ] = gr5;	// matrix
	
	gr5 = _text;
	[ ar5++ ] = gr5;	// dummy
	gr5 = gr7;
	call _printMatrix_32x;
	gr7 = gr5;
	sp -=4;
	pop ar5,gr5;
end PRINT_MATRIX_32X;


macro PRINT_MATRIX_32S(text, matrix, height, width)
	extern _printMatrix_32s:label;
	own skiptext:label;
	goto skiptext;
	own _text		: word[16]=text;	
	<skiptext>
	push ar5,gr5;
	ar5 = sp;
    sp += 4;
	
	gr5 = width;
    [ ar5++ ] = gr5;	// width
	
	gr5 = height; 
	[ ar5++ ] = gr5;	// height
	
	gr5 = matrix;
	[ ar5++ ] = gr5;	// matrix
	
	gr5 = _text;
	[ ar5++ ] = gr5;	// dummy
	
	gr5 = gr7;
	call _printMatrix_32s;
	gr7 = gr5;
	
	sp -=4;
	pop ar5,gr5;
end PRINT_MATRIX_32S;


macro PRINT_MATRIX_16X(text, matrix, height, width)
	extern _printMatrix_16x:label;
	own skiptext:label;
	goto skiptext;
	own _text		: word[16]=text;	
	<skiptext>
	push ar5,gr5;
	ar5 = sp;
    sp += 4;
	
	gr5 = width;
    [ ar5++ ] = gr5;	// width
	
	gr5 = height; 
	[ ar5++ ] = gr5;	// height
	
	gr5 = matrix;
	[ ar5++ ] = gr5;	// matrix
	
	gr5 = _text;
	[ ar5++ ] = gr5;	// dummy
	
	gr5 = gr7;
	call _printMatrix_16x;
	gr7 = gr5;
	
	sp -=4;
	pop ar5,gr5;
end PRINT_MATRIX_16X;


macro PRINT_MATRIX_16S(text, matrix, height, width)
	extern _printMatrix_16s:label;
	own skiptext:label;
	goto skiptext;
	own _text		: word[16]=text;	
	<skiptext>
	push ar5,gr5;
	ar5 = sp;
    sp += 4;
	
	gr5 = width;
    [ ar5++ ] = gr5;	// width
	
	gr5 = height; 
	[ ar5++ ] = gr5;	// height
	
	gr5 = matrix;
	[ ar5++ ] = gr5;	// matrix
	
	gr5 = _text;
	[ ar5++ ] = gr5;	// dummy
	
	gr5 = gr7;
	call _printMatrix_16s;
	gr7 = gr5;
	
	sp -=4;
	pop ar5,gr5;
end PRINT_MATRIX_16S;


macro PRINT_32X(text,x)
	extern _print_32x:label;
	own skiptext:label;
	goto skiptext;
	own __text		: word[16]=text;	
	<skiptext>
	push ar5,gr5;
	ar5 = sp;
    sp += 2;
	gr5 = x;
	[ ar5++ ] = gr5;	
	gr5 = __text;
	[ ar5++ ] = gr5;	
	gr5 = gr7;
	call _print_32x;
	gr7 = gr5;
	sp -=2;
	pop ar5,gr5;
end PRINT_32X;
